//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace IMPSTransactionRouter.NPPF {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_AscendBankingApi_WcfService", Namespace="http://com.ascend.core/services")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetBranchInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPsoInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountryInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDistrictInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSubDistrictInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeDepositOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeWithdrawalOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeFundTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeLoanRepaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeBalanceEnquiryOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeBalanceEnquiryByNationalIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckRequestStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReverseTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback TopupMobilePhoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback PayUtilityBillOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewSingleAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterExistingCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMiniStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsAgentAccountValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeEmiEnquiryByNationalIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeRentalPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback MakeRentalEnquiryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::IMPSTransactionRouter.Properties.Settings.Default.IMPSTransactionRouter_NPPF_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetBranchInformationCompletedEventHandler GetBranchInformationCompleted;
        
        /// <remarks/>
        public event GetPsoInformationCompletedEventHandler GetPsoInformationCompleted;
        
        /// <remarks/>
        public event GetCountryInformationCompletedEventHandler GetCountryInformationCompleted;
        
        /// <remarks/>
        public event GetDistrictInformationCompletedEventHandler GetDistrictInformationCompleted;
        
        /// <remarks/>
        public event GetSubDistrictInformationCompletedEventHandler GetSubDistrictInformationCompleted;
        
        /// <remarks/>
        public event MakeDepositCompletedEventHandler MakeDepositCompleted;
        
        /// <remarks/>
        public event MakeWithdrawalCompletedEventHandler MakeWithdrawalCompleted;
        
        /// <remarks/>
        public event MakeFundTransferCompletedEventHandler MakeFundTransferCompleted;
        
        /// <remarks/>
        public event MakeLoanRepaymentCompletedEventHandler MakeLoanRepaymentCompleted;
        
        /// <remarks/>
        public event MakeBalanceEnquiryCompletedEventHandler MakeBalanceEnquiryCompleted;
        
        /// <remarks/>
        public event MakeBalanceEnquiryByNationalIdCompletedEventHandler MakeBalanceEnquiryByNationalIdCompleted;
        
        /// <remarks/>
        public event CheckRequestStatusCompletedEventHandler CheckRequestStatusCompleted;
        
        /// <remarks/>
        public event ReverseTransactionCompletedEventHandler ReverseTransactionCompleted;
        
        /// <remarks/>
        public event TopupMobilePhoneCompletedEventHandler TopupMobilePhoneCompleted;
        
        /// <remarks/>
        public event PayUtilityBillCompletedEventHandler PayUtilityBillCompleted;
        
        /// <remarks/>
        public event CreateNewSingleAccountCompletedEventHandler CreateNewSingleAccountCompleted;
        
        /// <remarks/>
        public event RegisterExistingCustomerCompletedEventHandler RegisterExistingCustomerCompleted;
        
        /// <remarks/>
        public event GetMiniStatementCompletedEventHandler GetMiniStatementCompleted;
        
        /// <remarks/>
        public event IsAgentAccountValidCompletedEventHandler IsAgentAccountValidCompleted;
        
        /// <remarks/>
        public event MakeEmiEnquiryByNationalIdCompletedEventHandler MakeEmiEnquiryByNationalIdCompleted;
        
        /// <remarks/>
        public event MakeRentalPaymentCompletedEventHandler MakeRentalPaymentCompleted;
        
        /// <remarks/>
        public event MakeRentalEnquiryCompletedEventHandler MakeRentalEnquiryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/GetBranchInformation", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/AscendBankingAPI")]
        public BranchInformation[] GetBranchInformation([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string identityKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string deliveryChannel) {
            object[] results = this.Invoke("GetBranchInformation", new object[] {
                        identityKey,
                        deliveryChannel});
            return ((BranchInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBranchInformationAsync(string identityKey, string deliveryChannel) {
            this.GetBranchInformationAsync(identityKey, deliveryChannel, null);
        }
        
        /// <remarks/>
        public void GetBranchInformationAsync(string identityKey, string deliveryChannel, object userState) {
            if ((this.GetBranchInformationOperationCompleted == null)) {
                this.GetBranchInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBranchInformationOperationCompleted);
            }
            this.InvokeAsync("GetBranchInformation", new object[] {
                        identityKey,
                        deliveryChannel}, this.GetBranchInformationOperationCompleted, userState);
        }
        
        private void OnGetBranchInformationOperationCompleted(object arg) {
            if ((this.GetBranchInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBranchInformationCompleted(this, new GetBranchInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/GetPsoInformation", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/AscendBankingAPI")]
        public PsoInformation[] GetPsoInformation([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string identityKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string deliveryChannel) {
            object[] results = this.Invoke("GetPsoInformation", new object[] {
                        identityKey,
                        deliveryChannel});
            return ((PsoInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPsoInformationAsync(string identityKey, string deliveryChannel) {
            this.GetPsoInformationAsync(identityKey, deliveryChannel, null);
        }
        
        /// <remarks/>
        public void GetPsoInformationAsync(string identityKey, string deliveryChannel, object userState) {
            if ((this.GetPsoInformationOperationCompleted == null)) {
                this.GetPsoInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPsoInformationOperationCompleted);
            }
            this.InvokeAsync("GetPsoInformation", new object[] {
                        identityKey,
                        deliveryChannel}, this.GetPsoInformationOperationCompleted, userState);
        }
        
        private void OnGetPsoInformationOperationCompleted(object arg) {
            if ((this.GetPsoInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPsoInformationCompleted(this, new GetPsoInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/GetCountryInformation" +
            "", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/AscendBankingAPI")]
        public CountryInformation[] GetCountryInformation([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string identityKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string deliveryChannel) {
            object[] results = this.Invoke("GetCountryInformation", new object[] {
                        identityKey,
                        deliveryChannel});
            return ((CountryInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCountryInformationAsync(string identityKey, string deliveryChannel) {
            this.GetCountryInformationAsync(identityKey, deliveryChannel, null);
        }
        
        /// <remarks/>
        public void GetCountryInformationAsync(string identityKey, string deliveryChannel, object userState) {
            if ((this.GetCountryInformationOperationCompleted == null)) {
                this.GetCountryInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountryInformationOperationCompleted);
            }
            this.InvokeAsync("GetCountryInformation", new object[] {
                        identityKey,
                        deliveryChannel}, this.GetCountryInformationOperationCompleted, userState);
        }
        
        private void OnGetCountryInformationOperationCompleted(object arg) {
            if ((this.GetCountryInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountryInformationCompleted(this, new GetCountryInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/GetDistrictInformatio" +
            "n", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/AscendBankingAPI")]
        public DistrictInformation[] GetDistrictInformation([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string identityKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string deliveryChannel) {
            object[] results = this.Invoke("GetDistrictInformation", new object[] {
                        identityKey,
                        deliveryChannel});
            return ((DistrictInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDistrictInformationAsync(string identityKey, string deliveryChannel) {
            this.GetDistrictInformationAsync(identityKey, deliveryChannel, null);
        }
        
        /// <remarks/>
        public void GetDistrictInformationAsync(string identityKey, string deliveryChannel, object userState) {
            if ((this.GetDistrictInformationOperationCompleted == null)) {
                this.GetDistrictInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDistrictInformationOperationCompleted);
            }
            this.InvokeAsync("GetDistrictInformation", new object[] {
                        identityKey,
                        deliveryChannel}, this.GetDistrictInformationOperationCompleted, userState);
        }
        
        private void OnGetDistrictInformationOperationCompleted(object arg) {
            if ((this.GetDistrictInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDistrictInformationCompleted(this, new GetDistrictInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/GetSubDistrictInforma" +
            "tion", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/AscendBankingAPI")]
        public SubDistrictInformation[] GetSubDistrictInformation([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string identityKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string deliveryChannel) {
            object[] results = this.Invoke("GetSubDistrictInformation", new object[] {
                        identityKey,
                        deliveryChannel});
            return ((SubDistrictInformation[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSubDistrictInformationAsync(string identityKey, string deliveryChannel) {
            this.GetSubDistrictInformationAsync(identityKey, deliveryChannel, null);
        }
        
        /// <remarks/>
        public void GetSubDistrictInformationAsync(string identityKey, string deliveryChannel, object userState) {
            if ((this.GetSubDistrictInformationOperationCompleted == null)) {
                this.GetSubDistrictInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubDistrictInformationOperationCompleted);
            }
            this.InvokeAsync("GetSubDistrictInformation", new object[] {
                        identityKey,
                        deliveryChannel}, this.GetSubDistrictInformationOperationCompleted, userState);
        }
        
        private void OnGetSubDistrictInformationOperationCompleted(object arg) {
            if ((this.GetSubDistrictInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSubDistrictInformationCompleted(this, new GetSubDistrictInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/MakeDeposit", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] MakeDeposit([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] serviceRequestParameter) {
            object[] results = this.Invoke("MakeDeposit", new object[] {
                        serviceRequestParameter});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void MakeDepositAsync(string[] serviceRequestParameter) {
            this.MakeDepositAsync(serviceRequestParameter, null);
        }
        
        /// <remarks/>
        public void MakeDepositAsync(string[] serviceRequestParameter, object userState) {
            if ((this.MakeDepositOperationCompleted == null)) {
                this.MakeDepositOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeDepositOperationCompleted);
            }
            this.InvokeAsync("MakeDeposit", new object[] {
                        serviceRequestParameter}, this.MakeDepositOperationCompleted, userState);
        }
        
        private void OnMakeDepositOperationCompleted(object arg) {
            if ((this.MakeDepositCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeDepositCompleted(this, new MakeDepositCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/MakeWithdrawal", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] MakeWithdrawal([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] serviceRequestParameter) {
            object[] results = this.Invoke("MakeWithdrawal", new object[] {
                        serviceRequestParameter});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void MakeWithdrawalAsync(string[] serviceRequestParameter) {
            this.MakeWithdrawalAsync(serviceRequestParameter, null);
        }
        
        /// <remarks/>
        public void MakeWithdrawalAsync(string[] serviceRequestParameter, object userState) {
            if ((this.MakeWithdrawalOperationCompleted == null)) {
                this.MakeWithdrawalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeWithdrawalOperationCompleted);
            }
            this.InvokeAsync("MakeWithdrawal", new object[] {
                        serviceRequestParameter}, this.MakeWithdrawalOperationCompleted, userState);
        }
        
        private void OnMakeWithdrawalOperationCompleted(object arg) {
            if ((this.MakeWithdrawalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeWithdrawalCompleted(this, new MakeWithdrawalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/MakeFundTransfer", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] MakeFundTransfer([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] serviceRequestParameter) {
            object[] results = this.Invoke("MakeFundTransfer", new object[] {
                        serviceRequestParameter});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void MakeFundTransferAsync(string[] serviceRequestParameter) {
            this.MakeFundTransferAsync(serviceRequestParameter, null);
        }
        
        /// <remarks/>
        public void MakeFundTransferAsync(string[] serviceRequestParameter, object userState) {
            if ((this.MakeFundTransferOperationCompleted == null)) {
                this.MakeFundTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeFundTransferOperationCompleted);
            }
            this.InvokeAsync("MakeFundTransfer", new object[] {
                        serviceRequestParameter}, this.MakeFundTransferOperationCompleted, userState);
        }
        
        private void OnMakeFundTransferOperationCompleted(object arg) {
            if ((this.MakeFundTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeFundTransferCompleted(this, new MakeFundTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/MakeLoanRepayment", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] MakeLoanRepayment([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] serviceRequestParameter) {
            object[] results = this.Invoke("MakeLoanRepayment", new object[] {
                        serviceRequestParameter});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void MakeLoanRepaymentAsync(string[] serviceRequestParameter) {
            this.MakeLoanRepaymentAsync(serviceRequestParameter, null);
        }
        
        /// <remarks/>
        public void MakeLoanRepaymentAsync(string[] serviceRequestParameter, object userState) {
            if ((this.MakeLoanRepaymentOperationCompleted == null)) {
                this.MakeLoanRepaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeLoanRepaymentOperationCompleted);
            }
            this.InvokeAsync("MakeLoanRepayment", new object[] {
                        serviceRequestParameter}, this.MakeLoanRepaymentOperationCompleted, userState);
        }
        
        private void OnMakeLoanRepaymentOperationCompleted(object arg) {
            if ((this.MakeLoanRepaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeLoanRepaymentCompleted(this, new MakeLoanRepaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/MakeBalanceEnquiry", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] MakeBalanceEnquiry([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] serviceRequestParameter) {
            object[] results = this.Invoke("MakeBalanceEnquiry", new object[] {
                        serviceRequestParameter});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void MakeBalanceEnquiryAsync(string[] serviceRequestParameter) {
            this.MakeBalanceEnquiryAsync(serviceRequestParameter, null);
        }
        
        /// <remarks/>
        public void MakeBalanceEnquiryAsync(string[] serviceRequestParameter, object userState) {
            if ((this.MakeBalanceEnquiryOperationCompleted == null)) {
                this.MakeBalanceEnquiryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeBalanceEnquiryOperationCompleted);
            }
            this.InvokeAsync("MakeBalanceEnquiry", new object[] {
                        serviceRequestParameter}, this.MakeBalanceEnquiryOperationCompleted, userState);
        }
        
        private void OnMakeBalanceEnquiryOperationCompleted(object arg) {
            if ((this.MakeBalanceEnquiryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeBalanceEnquiryCompleted(this, new MakeBalanceEnquiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/MakeBalanceEnquiryByN" +
            "ationalId", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] MakeBalanceEnquiryByNationalId([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] serviceRequestParameter, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nationalId) {
            object[] results = this.Invoke("MakeBalanceEnquiryByNationalId", new object[] {
                        serviceRequestParameter,
                        nationalId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void MakeBalanceEnquiryByNationalIdAsync(string[] serviceRequestParameter, string nationalId) {
            this.MakeBalanceEnquiryByNationalIdAsync(serviceRequestParameter, nationalId, null);
        }
        
        /// <remarks/>
        public void MakeBalanceEnquiryByNationalIdAsync(string[] serviceRequestParameter, string nationalId, object userState) {
            if ((this.MakeBalanceEnquiryByNationalIdOperationCompleted == null)) {
                this.MakeBalanceEnquiryByNationalIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeBalanceEnquiryByNationalIdOperationCompleted);
            }
            this.InvokeAsync("MakeBalanceEnquiryByNationalId", new object[] {
                        serviceRequestParameter,
                        nationalId}, this.MakeBalanceEnquiryByNationalIdOperationCompleted, userState);
        }
        
        private void OnMakeBalanceEnquiryByNationalIdOperationCompleted(object arg) {
            if ((this.MakeBalanceEnquiryByNationalIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeBalanceEnquiryByNationalIdCompleted(this, new MakeBalanceEnquiryByNationalIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/CheckRequestStatus", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] CheckRequestStatus([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] serviceRequestParameter, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string referenceNumberToBeChecked) {
            object[] results = this.Invoke("CheckRequestStatus", new object[] {
                        serviceRequestParameter,
                        referenceNumberToBeChecked});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void CheckRequestStatusAsync(string[] serviceRequestParameter, string referenceNumberToBeChecked) {
            this.CheckRequestStatusAsync(serviceRequestParameter, referenceNumberToBeChecked, null);
        }
        
        /// <remarks/>
        public void CheckRequestStatusAsync(string[] serviceRequestParameter, string referenceNumberToBeChecked, object userState) {
            if ((this.CheckRequestStatusOperationCompleted == null)) {
                this.CheckRequestStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckRequestStatusOperationCompleted);
            }
            this.InvokeAsync("CheckRequestStatus", new object[] {
                        serviceRequestParameter,
                        referenceNumberToBeChecked}, this.CheckRequestStatusOperationCompleted, userState);
        }
        
        private void OnCheckRequestStatusOperationCompleted(object arg) {
            if ((this.CheckRequestStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckRequestStatusCompleted(this, new CheckRequestStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/ReverseTransaction", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] ReverseTransaction([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] transactionReversalParameter) {
            object[] results = this.Invoke("ReverseTransaction", new object[] {
                        transactionReversalParameter});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ReverseTransactionAsync(string[] transactionReversalParameter) {
            this.ReverseTransactionAsync(transactionReversalParameter, null);
        }
        
        /// <remarks/>
        public void ReverseTransactionAsync(string[] transactionReversalParameter, object userState) {
            if ((this.ReverseTransactionOperationCompleted == null)) {
                this.ReverseTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReverseTransactionOperationCompleted);
            }
            this.InvokeAsync("ReverseTransaction", new object[] {
                        transactionReversalParameter}, this.ReverseTransactionOperationCompleted, userState);
        }
        
        private void OnReverseTransactionOperationCompleted(object arg) {
            if ((this.ReverseTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReverseTransactionCompleted(this, new ReverseTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/TopupMobilePhone", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] TopupMobilePhone([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] serviceRequestParameter, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string utilityProviderId) {
            object[] results = this.Invoke("TopupMobilePhone", new object[] {
                        serviceRequestParameter,
                        utilityProviderId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void TopupMobilePhoneAsync(string[] serviceRequestParameter, string utilityProviderId) {
            this.TopupMobilePhoneAsync(serviceRequestParameter, utilityProviderId, null);
        }
        
        /// <remarks/>
        public void TopupMobilePhoneAsync(string[] serviceRequestParameter, string utilityProviderId, object userState) {
            if ((this.TopupMobilePhoneOperationCompleted == null)) {
                this.TopupMobilePhoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTopupMobilePhoneOperationCompleted);
            }
            this.InvokeAsync("TopupMobilePhone", new object[] {
                        serviceRequestParameter,
                        utilityProviderId}, this.TopupMobilePhoneOperationCompleted, userState);
        }
        
        private void OnTopupMobilePhoneOperationCompleted(object arg) {
            if ((this.TopupMobilePhoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TopupMobilePhoneCompleted(this, new TopupMobilePhoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/PayUtilityBill", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] PayUtilityBill([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] serviceRequestParameter, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string utilityProviderId) {
            object[] results = this.Invoke("PayUtilityBill", new object[] {
                        serviceRequestParameter,
                        utilityProviderId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void PayUtilityBillAsync(string[] serviceRequestParameter, string utilityProviderId) {
            this.PayUtilityBillAsync(serviceRequestParameter, utilityProviderId, null);
        }
        
        /// <remarks/>
        public void PayUtilityBillAsync(string[] serviceRequestParameter, string utilityProviderId, object userState) {
            if ((this.PayUtilityBillOperationCompleted == null)) {
                this.PayUtilityBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPayUtilityBillOperationCompleted);
            }
            this.InvokeAsync("PayUtilityBill", new object[] {
                        serviceRequestParameter,
                        utilityProviderId}, this.PayUtilityBillOperationCompleted, userState);
        }
        
        private void OnPayUtilityBillOperationCompleted(object arg) {
            if ((this.PayUtilityBillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PayUtilityBillCompleted(this, new PayUtilityBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/CreateNewSingleAccoun" +
            "t", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] CreateNewSingleAccount([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] serviceRequestParameter, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] accountCreationParameter, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] picImage, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)] byte[] signImage) {
            object[] results = this.Invoke("CreateNewSingleAccount", new object[] {
                        serviceRequestParameter,
                        accountCreationParameter,
                        picImage,
                        signImage});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewSingleAccountAsync(string[] serviceRequestParameter, string[] accountCreationParameter, byte[] picImage, byte[] signImage) {
            this.CreateNewSingleAccountAsync(serviceRequestParameter, accountCreationParameter, picImage, signImage, null);
        }
        
        /// <remarks/>
        public void CreateNewSingleAccountAsync(string[] serviceRequestParameter, string[] accountCreationParameter, byte[] picImage, byte[] signImage, object userState) {
            if ((this.CreateNewSingleAccountOperationCompleted == null)) {
                this.CreateNewSingleAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewSingleAccountOperationCompleted);
            }
            this.InvokeAsync("CreateNewSingleAccount", new object[] {
                        serviceRequestParameter,
                        accountCreationParameter,
                        picImage,
                        signImage}, this.CreateNewSingleAccountOperationCompleted, userState);
        }
        
        private void OnCreateNewSingleAccountOperationCompleted(object arg) {
            if ((this.CreateNewSingleAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewSingleAccountCompleted(this, new CreateNewSingleAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/RegisterExistingCusto" +
            "mer", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] RegisterExistingCustomer([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] serviceRequestParameter) {
            object[] results = this.Invoke("RegisterExistingCustomer", new object[] {
                        serviceRequestParameter});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void RegisterExistingCustomerAsync(string[] serviceRequestParameter) {
            this.RegisterExistingCustomerAsync(serviceRequestParameter, null);
        }
        
        /// <remarks/>
        public void RegisterExistingCustomerAsync(string[] serviceRequestParameter, object userState) {
            if ((this.RegisterExistingCustomerOperationCompleted == null)) {
                this.RegisterExistingCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterExistingCustomerOperationCompleted);
            }
            this.InvokeAsync("RegisterExistingCustomer", new object[] {
                        serviceRequestParameter}, this.RegisterExistingCustomerOperationCompleted, userState);
        }
        
        private void OnRegisterExistingCustomerOperationCompleted(object arg) {
            if ((this.RegisterExistingCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterExistingCustomerCompleted(this, new RegisterExistingCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/GetMiniStatement", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", NestingLevel=1)]
        public string[][] GetMiniStatement([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] serviceRequestParameter) {
            object[] results = this.Invoke("GetMiniStatement", new object[] {
                        serviceRequestParameter});
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetMiniStatementAsync(string[] serviceRequestParameter) {
            this.GetMiniStatementAsync(serviceRequestParameter, null);
        }
        
        /// <remarks/>
        public void GetMiniStatementAsync(string[] serviceRequestParameter, object userState) {
            if ((this.GetMiniStatementOperationCompleted == null)) {
                this.GetMiniStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMiniStatementOperationCompleted);
            }
            this.InvokeAsync("GetMiniStatement", new object[] {
                        serviceRequestParameter}, this.GetMiniStatementOperationCompleted, userState);
        }
        
        private void OnGetMiniStatementOperationCompleted(object arg) {
            if ((this.GetMiniStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMiniStatementCompleted(this, new GetMiniStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/IsAgentAccountValid", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IsAgentAccountValid([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string accountNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string agentId, out bool IsAgentAccountValidResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool IsAgentAccountValidResultSpecified) {
            object[] results = this.Invoke("IsAgentAccountValid", new object[] {
                        accountNumber,
                        agentId});
            IsAgentAccountValidResult = ((bool)(results[0]));
            IsAgentAccountValidResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void IsAgentAccountValidAsync(string accountNumber, string agentId) {
            this.IsAgentAccountValidAsync(accountNumber, agentId, null);
        }
        
        /// <remarks/>
        public void IsAgentAccountValidAsync(string accountNumber, string agentId, object userState) {
            if ((this.IsAgentAccountValidOperationCompleted == null)) {
                this.IsAgentAccountValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAgentAccountValidOperationCompleted);
            }
            this.InvokeAsync("IsAgentAccountValid", new object[] {
                        accountNumber,
                        agentId}, this.IsAgentAccountValidOperationCompleted, userState);
        }
        
        private void OnIsAgentAccountValidOperationCompleted(object arg) {
            if ((this.IsAgentAccountValidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAgentAccountValidCompleted(this, new IsAgentAccountValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/MakeEmiEnquiryByNatio" +
            "nalId", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] MakeEmiEnquiryByNationalId([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] serviceRequestParameter, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nationalId) {
            object[] results = this.Invoke("MakeEmiEnquiryByNationalId", new object[] {
                        serviceRequestParameter,
                        nationalId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void MakeEmiEnquiryByNationalIdAsync(string[] serviceRequestParameter, string nationalId) {
            this.MakeEmiEnquiryByNationalIdAsync(serviceRequestParameter, nationalId, null);
        }
        
        /// <remarks/>
        public void MakeEmiEnquiryByNationalIdAsync(string[] serviceRequestParameter, string nationalId, object userState) {
            if ((this.MakeEmiEnquiryByNationalIdOperationCompleted == null)) {
                this.MakeEmiEnquiryByNationalIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeEmiEnquiryByNationalIdOperationCompleted);
            }
            this.InvokeAsync("MakeEmiEnquiryByNationalId", new object[] {
                        serviceRequestParameter,
                        nationalId}, this.MakeEmiEnquiryByNationalIdOperationCompleted, userState);
        }
        
        private void OnMakeEmiEnquiryByNationalIdOperationCompleted(object arg) {
            if ((this.MakeEmiEnquiryByNationalIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeEmiEnquiryByNationalIdCompleted(this, new MakeEmiEnquiryByNationalIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/MakeRentalPayment", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] MakeRentalPayment([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] serviceRequestParameter, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nationalId) {
            object[] results = this.Invoke("MakeRentalPayment", new object[] {
                        serviceRequestParameter,
                        nationalId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void MakeRentalPaymentAsync(string[] serviceRequestParameter, string nationalId) {
            this.MakeRentalPaymentAsync(serviceRequestParameter, nationalId, null);
        }
        
        /// <remarks/>
        public void MakeRentalPaymentAsync(string[] serviceRequestParameter, string nationalId, object userState) {
            if ((this.MakeRentalPaymentOperationCompleted == null)) {
                this.MakeRentalPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeRentalPaymentOperationCompleted);
            }
            this.InvokeAsync("MakeRentalPayment", new object[] {
                        serviceRequestParameter,
                        nationalId}, this.MakeRentalPaymentOperationCompleted, userState);
        }
        
        private void OnMakeRentalPaymentOperationCompleted(object arg) {
            if ((this.MakeRentalPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeRentalPaymentCompleted(this, new MakeRentalPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.ascend.core/services/AscendBankingApi_WcfService/MakeRentalEnquiry", RequestNamespace="http://com.ascend.core/services/", ResponseNamespace="http://com.ascend.core/services/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] MakeRentalEnquiry([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] serviceRequestParameter, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string nationalId) {
            object[] results = this.Invoke("MakeRentalEnquiry", new object[] {
                        serviceRequestParameter,
                        nationalId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void MakeRentalEnquiryAsync(string[] serviceRequestParameter, string nationalId) {
            this.MakeRentalEnquiryAsync(serviceRequestParameter, nationalId, null);
        }
        
        /// <remarks/>
        public void MakeRentalEnquiryAsync(string[] serviceRequestParameter, string nationalId, object userState) {
            if ((this.MakeRentalEnquiryOperationCompleted == null)) {
                this.MakeRentalEnquiryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMakeRentalEnquiryOperationCompleted);
            }
            this.InvokeAsync("MakeRentalEnquiry", new object[] {
                        serviceRequestParameter,
                        nationalId}, this.MakeRentalEnquiryOperationCompleted, userState);
        }
        
        private void OnMakeRentalEnquiryOperationCompleted(object arg) {
            if ((this.MakeRentalEnquiryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MakeRentalEnquiryCompleted(this, new MakeRentalEnquiryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/AscendBankingAPI")]
    public partial class BranchInformation {
        
        private string branchCodeField;
        
        private string branchNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BranchCode {
            get {
                return this.branchCodeField;
            }
            set {
                this.branchCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BranchName {
            get {
                return this.branchNameField;
            }
            set {
                this.branchNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/AscendBankingAPI")]
    public partial class SubDistrictInformation {
        
        private string countryIdField;
        
        private string districtIdField;
        
        private string subDistrictIdField;
        
        private string subDistrictNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CountryId {
            get {
                return this.countryIdField;
            }
            set {
                this.countryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DistrictId {
            get {
                return this.districtIdField;
            }
            set {
                this.districtIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SubDistrictId {
            get {
                return this.subDistrictIdField;
            }
            set {
                this.subDistrictIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SubDistrictName {
            get {
                return this.subDistrictNameField;
            }
            set {
                this.subDistrictNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/AscendBankingAPI")]
    public partial class DistrictInformation {
        
        private string countryIdField;
        
        private string districtIdField;
        
        private string districtNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CountryId {
            get {
                return this.countryIdField;
            }
            set {
                this.countryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DistrictId {
            get {
                return this.districtIdField;
            }
            set {
                this.districtIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DistrictName {
            get {
                return this.districtNameField;
            }
            set {
                this.districtNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/AscendBankingAPI")]
    public partial class CountryInformation {
        
        private string countryIdField;
        
        private string countryNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CountryId {
            get {
                return this.countryIdField;
            }
            set {
                this.countryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/AscendBankingAPI")]
    public partial class PsoInformation {
        
        private string psoIdField;
        
        private string psoNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PsoId {
            get {
                return this.psoIdField;
            }
            set {
                this.psoIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PsoName {
            get {
                return this.psoNameField;
            }
            set {
                this.psoNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetBranchInformationCompletedEventHandler(object sender, GetBranchInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBranchInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBranchInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BranchInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BranchInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPsoInformationCompletedEventHandler(object sender, GetPsoInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPsoInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPsoInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PsoInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PsoInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetCountryInformationCompletedEventHandler(object sender, GetCountryInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountryInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountryInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CountryInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CountryInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetDistrictInformationCompletedEventHandler(object sender, GetDistrictInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDistrictInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDistrictInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DistrictInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DistrictInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetSubDistrictInformationCompletedEventHandler(object sender, GetSubDistrictInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSubDistrictInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSubDistrictInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SubDistrictInformation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SubDistrictInformation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MakeDepositCompletedEventHandler(object sender, MakeDepositCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeDepositCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MakeDepositCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MakeWithdrawalCompletedEventHandler(object sender, MakeWithdrawalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeWithdrawalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MakeWithdrawalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MakeFundTransferCompletedEventHandler(object sender, MakeFundTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeFundTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MakeFundTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MakeLoanRepaymentCompletedEventHandler(object sender, MakeLoanRepaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeLoanRepaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MakeLoanRepaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MakeBalanceEnquiryCompletedEventHandler(object sender, MakeBalanceEnquiryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeBalanceEnquiryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MakeBalanceEnquiryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MakeBalanceEnquiryByNationalIdCompletedEventHandler(object sender, MakeBalanceEnquiryByNationalIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeBalanceEnquiryByNationalIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MakeBalanceEnquiryByNationalIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CheckRequestStatusCompletedEventHandler(object sender, CheckRequestStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckRequestStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckRequestStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void ReverseTransactionCompletedEventHandler(object sender, ReverseTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReverseTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReverseTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void TopupMobilePhoneCompletedEventHandler(object sender, TopupMobilePhoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TopupMobilePhoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TopupMobilePhoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void PayUtilityBillCompletedEventHandler(object sender, PayUtilityBillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PayUtilityBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PayUtilityBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void CreateNewSingleAccountCompletedEventHandler(object sender, CreateNewSingleAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewSingleAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewSingleAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void RegisterExistingCustomerCompletedEventHandler(object sender, RegisterExistingCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterExistingCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterExistingCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetMiniStatementCompletedEventHandler(object sender, GetMiniStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMiniStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMiniStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void IsAgentAccountValidCompletedEventHandler(object sender, IsAgentAccountValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAgentAccountValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAgentAccountValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool IsAgentAccountValidResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool IsAgentAccountValidResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MakeEmiEnquiryByNationalIdCompletedEventHandler(object sender, MakeEmiEnquiryByNationalIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeEmiEnquiryByNationalIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MakeEmiEnquiryByNationalIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MakeRentalPaymentCompletedEventHandler(object sender, MakeRentalPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeRentalPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MakeRentalPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void MakeRentalEnquiryCompletedEventHandler(object sender, MakeRentalEnquiryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MakeRentalEnquiryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MakeRentalEnquiryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591